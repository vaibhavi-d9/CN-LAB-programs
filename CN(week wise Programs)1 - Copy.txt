program 1A


#include<stdio.h>
#include<conio.h>
void main()
{
int a[15];
int i,j,k,n,c=0,pos=0;
printf("\n Enter the no of Bits:\t");
scanf("%d",&n);
for(i=0;i<n;i++)
scanf("%d",&a[i]);
for(i=0;i<n;i++)
{
if(a[i]==1)
{
c++;
if(c==5)
{
pos=i+1;
c=0;
for(j=n;j>=pos;j--)
{
k=j+1;
a[k]=a[j];
}
a[pos]=0;
n=n+1;
}
}
else
c=0;
}
printf("\n Data After Stuffing:");
printf("011111110 \t");
for(i=0;i<n;i++)
{
printf("%d",a[i]) ;
}
printf("\t011111110");
getch();
}



program 1B


#include<stdio.h>
#include<conio.h>
#include<string.h>
int main()
{
    char a[100],b[100],c[100];
    int i,j=0,n,k=0;
    printf("Enter the Data:");
    gets(a);
    n=strlen(a);

    for(i=0;i<n;i++)
    {



        if((a[i] == 'd' && a[i+1]=='l' && a[i+2]=='e')||
(a[i] == 'E' && a[i+1]=='S' && a[i+2]=='C'))
        {
            c[k++] = 'E';
            c[k++] = 'S';
            c[k++] = 'C';

        }
        c[k++] = a[i];
    }



    c[k++] = '\0';

    b[j++]='\0';
    printf("%s\n",b);
    printf("DLESTX \t");
    printf("%s",c);
     printf("\t DLEETX ");
    return 0;
}


program 2

#include <stdio.h>
 #include <conio.h>
 #include <string.h>
 void main() {
	int i,j,keylen,msglen;
	char input[100], key[30],temp[30],quot[100],rem[30],key1[30];

	printf("Enter Data: ");
	gets(input);
	printf("Enter Key: ");
	gets(key);
	keylen=strlen(key);
	msglen=strlen(input);
	strcpy(key1,key);
	for (i=0;i<keylen-1;i++) {
		input[msglen+i]='0';
	}
	for (i=0;i<keylen;i++)
	 temp[i]=input[i];
	for (i=0;i<msglen;i++) {
		quot[i]=temp[0];
		if(quot[i]=='0')
		 for (j=0;j<keylen;j++)
		 key[j]='0'; else
		 for (j=0;j<keylen;j++)
		 key[j]=key1[j];
		for (j=keylen-1;j>0;j--) {
			if(temp[j]==key[j])
			 rem[j-1]='0'; else
			 rem[j-1]='1';
}
		rem[keylen-1]=input[i+keylen];
		strcpy(temp,rem);
	}
	strcpy(rem,temp);
	printf("\nQuotient is ");
	for (i=0;i<msglen;i++)
	 printf("%c",quot[i]);
	printf("\nRemainder is ");
	for (i=0;i<keylen-1;i++)
	 printf("%c",rem[i]);
	printf("\nFinal data is: ");
	for (i=0;i<msglen;i++)
	 printf("%c",input[i]);
	for (i=0;i<keylen-1;i++)
	 printf("%c",rem[i]);
	getch();
}



program 2A

#include<stdio.h>
#include<string.h>
#define N strlen(gen_poly)

char data[28];
char check_value[28];
char gen_poly[10];
int data_length,i,j;
void XOR()
{
for(j = 1;j < N; j++)
check_value[j] = (( check_value[j] == gen_poly[j])?'0':'1');
}

void receiver(){

printf("Enter the received data: ");
scanf("%s", data);
printf("\n-----------------------------\n");
printf("Data received: %s", data);
crc();

for(i=0;(i<N-1) && (check_value[i]!='1');i++);
if(i<N-1)
printf("\nError detected\n\n");
else
printf("\nNo error detected\n\n");
}

void crc(){

for(i=0;i<N;i++)
check_value[i]=data[i];
do
{
if(check_value[0]=='1')
XOR();

for(j=0;j<N-1;j++)
check_value[j]=check_value[j+1];

check_value[j]=data[i++];
}while(i<=data_length+N-1);

}

int main()
{

printf("\nEnter data to be transmitted: ");
scanf("%s",data);
printf("\n Enter the Generating polynomial: ");
scanf("%s",gen_poly);
data_length=strlen(data);

for(i=data_length;i<data_length+N-1;i++)
data[i]='0';
printf("\n----------------------------------------");
printf("\n Data padded with n-1 zeros : %s",data);
printf("\n----------------------------------------");
crc();

printf("\nCRC or Check value is : %s",check_value);

for(i=data_length;i<data_length+N-1;i++)
data[i]=check_value[i-data_length];
printf("\n----------------------------------------");

printf("\n Final data to be sent : %s",data);
printf("\n----------------------------------------\n");

receiver();
return 0;
}



program 3



#include<stdio.h>
#include<string.h>
#define N strlen(gen_poly)

char data[28];
char check_value[28];
char gen_poly[10];
int data_length,i,j;
void XOR()
{
for(j = 1;j < N; j++)
check_value[j] = (( check_value[j] == gen_poly[j])?'0':'1');
}

void receiver(){

printf("Enter the received data: ");
scanf("%s", data);
printf("\n-----------------------------\n");
printf("Data received: %s", data);
crc();

for(i=0;(i<N-1) && (check_value[i]!='1');i++);
if(i<N-1)
printf("\nError detected\n\n");
else
printf("\nNo error detected\n\n");
}

void crc(){

for(i=0;i<N;i++)
check_value[i]=data[i];
do
{
if(check_value[0]=='1')
XOR();

for(j=0;j<N-1;j++)
check_value[j]=check_value[j+1];

check_value[j]=data[i++];
}while(i<=data_length+N-1);

}

int main()
{

printf("\nEnter data to be transmitted: ");
scanf("%s",data);
printf("\n Enter the Generating polynomial: ");
scanf("%s",gen_poly);
data_length=strlen(data);

for(i=data_length;i<data_length+N-1;i++)
data[i]='0';
printf("\n----------------------------------------");
printf("\n Data padded with n-1 zeros : %s",data);
printf("\n----------------------------------------");
crc();

printf("\nCRC or Check value is : %s",check_value);

for(i=data_length;i<data_length+N-1;i++)
data[i]=check_value[i-data_length];
printf("\n----------------------------------------");

printf("\n Final data to be sent : %s",data);
printf("\n----------------------------------------\n");

receiver();
return 0;
}




program 4

#include<stdio.h>

int main()
{
    int w,i,f,frames[50];

    printf("Enter window size: ");
    scanf("%d",&w);

    printf("\nEnter number of frames to transmit: ");
    scanf("%d",&f);

    printf("\nEnter %d frames: ",f);

    for(i=1;i<=f;i++)
        scanf("%d",&frames[i]);

    printf("\nWith sliding window protocol the frames will be sent in the following manner (assuming no corruption of frames)\n\n");
    printf("After sending %d frames at each stage sender waits for acknowledgement sent by the receiver\n\n",w);

    for(i=1;i<=f;i++)
    {
        if(i%w==0)
        {
            printf("%d\n",frames[i]);
            printf("Acknowledgement of above frames sent is received by sender\n\n");
        }
        else
            printf("%d ",frames[i]);
    }

    if(f%w!=0)
        printf("\nAcknowledgement of above frames sent is received by sender\n");

    return 0;
}





program 5


#include <stdio.h>
#define infinity 9999
#define MAX 20
int minimum(int a,int b)
{
	if(a<=b)
	  return a;
	else
	  return b;
}
main()
{
	int i,j,k,n,start,end,adj[MAX][MAX],path[MAX][MAX];
	printf("Enter number of vertices : ");
	scanf("%d",&n);
	printf("Enter weighted matrix :\n");
	for(i=0;i<n;i++)
	   for(j=0;j<n;j++)
		scanf("%d",&adj[i][j]);
       for(i=0;i<n;i++)
	   for(j=0;j<n;j++)
   if(adj[i][j]==0)
		path[i][j]=infinity;
	   else
		path[i][j]=adj[i][j];
	for(k=0;k<n;k++)
	{
		for(i=0;i<n;i++)
		  for(j=0;j<n;j++){
            if(i==j)
            path[i][j]=infinity;
          else
		    path[i][j]=minimum(path[i][j],path[i][k]+path[k][j]);
	}
	}
	printf("Shortest path matrix is :\n");
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
			printf("%6d",path[i][j]);
		printf("\n");
	}
	printf("Enter start vertex :");
	scanf("%d",&start);
	printf("Enter end vertex :");
	scanf("%d",&end);
	printf("the min. cost between %d and %d is %d",start,end,path[start][end]);
}



program 6

#include<stdio.h>
int a[10][10],n;
main(){
int i,j,root;
printf("Enter no.of nodes:");
scanf("%d",&n);
printf("Enter adjacent matrix\n");
for(i=1;i<=n;i++)
for(j=1;j<=n;j++){
printf("Enter connecting of %d-->%d::",i,j);
scanf("%d",&a[i][j]);
}
printf("Enter root node:");
scanf("%d",&root);
adj(root);
}
adj(int k){
int i,j;
printf("Adjacent node of root node::\n");
printf("%d\n\n",k);
for(j=1;j<=n;j++)
{
if(a[k][j]==1 || a[j][k]==1)
printf("%d\t",j);
}
printf("\n");
for(i=1;i<=n;i++){
if((a[k][j]==0) && (a[i][k]==0) && (i!=k))
printf("%d",i);
}
}



program 7


#include <stdio.h>
#include <conio.h>

int main() 
{ 
    int i, sn; 
    int st[20]; 
    char op; 

    printf("\n How many stations: "); 
    scanf("%d", &sn); 

    do 
    { 
        printf("\n Enter status of stations\n"); 
        for (i = 0; i < sn; i++) 
        { 
            printf(" Enter status of station %d: ", i + 1); 
            scanf("%d", &st[i]); 
        } 

        // Print ready stations 
        for (i = 0; i < sn; i++) 
        { 
            if (st[i] == 1) 
            { 
                printf(" Station %d is ready to transmit\n", i + 1); 
            } 
        } 

        printf(" Repeat? Press Y :"); 
        scanf(" %c", &op); 
    } 
    while (op == 'y' || op == 'Y'); 

    getch(); 

    return 0; 
}